{"version":3,"sources":["components/PersonalHistory/PersonalHistory.jsx"],"names":["PersonalHistory","dispatch","useDispatch","userIsAuthentificated","useSelector","s","auth","success","token","useEffect","openModal","AUTH_MODAL","to","className","cn","buttonClasses"],"mappings":"kRA+CeA,EApCS,WACtB,IAAMC,EAAWC,cACXC,EAAwBC,aAAY,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,QAAQC,SAqB9D,OAjBAC,qBAAU,WAMHN,GACHF,EAASS,YAAUC,QAGpB,CAACV,EAAUE,IAONA,EAUJ,oDATA,6BACE,mDACA,kBAAC,IAAD,CACES,GAAG,IACHC,UAAWC,IAAGC,IAAe,kCAF/B","file":"static/js/5.31e42aa6.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n// import { getSalaries } from '../../redux/authReducer/authActionCreators';\nimport { AUTH_MODAL, openModal } from '../../redux/modalReducer/modalReducer';\n\n\nimport './PersonalHistory.scss'\nimport cn from 'classnames';\nimport buttonClasses from '../AppMainButton/AppMainButton.module.scss';\n\nconst PersonalHistory = () => {\n  const dispatch = useDispatch();\n  const userIsAuthentificated = useSelector(s => s.auth.success.token);\n  // const authModalIsOpen = useSelector(s => s.modal[AUTH_MODAL].isOpen)\n  // const localId = useSelector(s => s.auth.success.localId);\n\n  useEffect(() => {\n    /** @todo  - todo #6 */\n    // if (userIsAuthentificated && localId) {\n      // dispatch(getSalaries(userIsAuthentificated));\n    // }\n\n    if (!userIsAuthentificated) {\n      dispatch(openModal(AUTH_MODAL));\n    }\n\n  }, [dispatch, userIsAuthentificated])\n\n  /** @info may be redundant */\n  // if(!userIsAuthentificated && !authModalIsOpen) {\n  //   return <Redirect to='/' />\n  // }\n\n  return !userIsAuthentificated\n    ? <div>\n        <p>You're not logged in</p>\n        <Link\n          to='/'\n          className={cn(buttonClasses, 'PersonalHistory__mainPageLink')}\n        >\n          Go to main page\n        </Link>\n      </div>\n    : <p>some personal history</p>\n}\n\nexport default PersonalHistory;"],"sourceRoot":""}